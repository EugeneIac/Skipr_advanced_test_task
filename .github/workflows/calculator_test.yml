name: Calculator App Addition Test

on:
  workflow_dispatch:
    inputs:
      num1:
        description: 'First number for addition'
        required: true
        default: '3'
      num2:
        description: 'Second number for addition'
        required: true
        default: '5'
      expectedResult:
        description: 'Expected result of the addition'
        required: true
        default: '8'

jobs:
  test:
    name: Run Appium Calculator Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Install UiAutomator2 driver
        run: |
          appium driver install uiautomator2

      - name: Verify drivers installed
        run: |
          appium driver list

      - name: Install android emulator and system image
        run: |
          echo y | sdkmanager --sdk_root=$ANDROID_HOME "system-images;android-34;google_apis;x86_64"
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "emulator"

      - name: Create AVD with Android API 34
        run: |
          echo "no" | avdmanager create avd -n Android34 -k "system-images;android-34;google_apis;x86_64"


      - name: Start emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd Android34 -no-window -no-boot-anim -gpu off -accel off -no-snapshot-save &

      - name: Wait for emulator to up and running
        run: |
          adb devices
          while ! adb -s emulator-5554 wait-for-device; do
            echo "Waiting for device to be online..."
            sleep 5
          done
          while [[ $(adb shell getprop sys.boot_completed 2>/dev/null) != "1" ]]; do
            echo "Still waiting for emulator to boot..."
            sleep 5
          done
          echo "Emulator booted. Waiting for package manager service to come online..."
          while ! adb shell 'pm list packages' > /dev/null 2>&1; do
            echo "Waiting for package manager service..."
            sleep 5
          done
          echo "Package manager is now available. Emulator is fully ready!"
          adb devices
          sleep 20
          echo "Additional wait for 20 seconds complete. Emulator started."

      - name: Install dependencies
        run: |
          mvn clean install -DskipTests

      - name: Start Appium server
        run: |
          echo "Starting Appium server..."
          nohup appium --address 127.0.0.1 --port 4723 --log appium.log --log-level info &
          sleep 5
          echo "Appium server started."

      - name: Verify Appium server status
        run: |
          echo "Verifying Appium server is up..."
          curl -X GET http://127.0.0.1:4723/status || {
            echo "Appium server is not running!"
            cat appium.log
            exit 1
          }

      - name: Verify emulator is recognized
        run: |
          echo "Checking connected devices..."
          adb devices
          if adb devices | grep "emulator-5554.*device"; then
            echo "Emulator is connected and ready."
          else
            echo "Emulator is not recognized by ADB!"
            exit 1
          fi

      - name: Verify APKs path
        run: |
          if [ -f "./apk/calc.apk" ]; then
            echo "calc.apk found."
          else
            echo "calc.apk not found!"
            exit 1
          fi
          
          if [ -f "./apk/appium_settings.apk" ]; then
            echo "appium_settings.apk found."
          else
            echo "appium_settings.apk not found!"
            exit 1
          fi


      - name: Install APKs on emulator
        run: |
          adb install -g ./apk/calc.apk
          if [ $? -eq 0 ]; then
            echo "calc.apk installed successfully."
          else
            echo "Failed to install calc.apk"
            exit 1
          fi
          
          adb install -g ./apk/appium_settings.apk
          if [ $? -eq 0 ]; then
            echo "appium_settings.apk installed successfully."
          else
            echo "Failed to install appium_settings.apk"
            exit 1
          fi

      - name: Verify Calculator is installed
        run: |
          echo "Verifying Calculator app is installed..."
          adb shell pm list packages | grep "com.google.android.calculator" || {
            echo "App not found! Installation failed."
            exit 1
          }
          echo "App is installed successfully."

      - name: Check if Appium settings app is installed
        run: |
          if adb shell pm list packages | grep "io.appium.settings"; then
            echo "Appium Settings app is installed."
          else
            echo "Appium Settings app is not installed!"
            exit 1
          fi

      - name: Grant All Permissions, Launch, and Verify Appium Settings App
        run: |
          echo "Granting all dynamically requested permissions to io.appium.settings..."
          for permission in $(adb shell dumpsys package io.appium.settings | grep permission | grep -oE 'android.permission.[A-Z_]+'); do
            # Skip non-grantable permissions like BIND_INPUT_METHOD
            if [[ "$permission" == "android.permission.BIND_INPUT_METHOD" ]]; then
              echo "Skipping non-grantable permission: $permission"
            else
              echo "Granting $permission..."
              adb shell pm grant io.appium.settings $permission || echo "Failed to grant $permission"
            fi
          done
          echo "Dynamic permission grant completed."

          echo "Launching Appium Settings app..."
          adb shell am start -n io.appium.settings/.Settings
          if [ $? -eq 0 ]; then
            echo "Appium Settings app launched successfully."
          else
            echo "Failed to launch Appium Settings app."
            exit 1
          fi
          
          sleep 30
          
          echo "Verifying if Appium Settings app is running..."
          if adb shell pgrep -f io\.appium\.settings; then
            echo "Appium Settings app is running."
          else
            echo "Appium Settings app is NOT running!"
            exit 1
          fi

      - name: Verify Appium server is running
        run: |
          echo "Checking if Appium server is running..."
          if ! pgrep -f "appium"; then
            echo "Appium server is not running!"
            exit 1
          fi
          echo "Appium server is up and running."

      - name: Run Appium test
        run: |
          mvn test -Dnum1=${{ github.event.inputs.num1 }} -Dnum2=${{ github.event.inputs.num2 }} -DexpectedResult=${{ github.event.inputs.expectedResult }}
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: target/surefire-reports/
