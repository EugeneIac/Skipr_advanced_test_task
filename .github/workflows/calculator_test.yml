name: Calculator App Addition Test

on:
  workflow_dispatch:
    inputs:
      num1:
        description: 'First number for addition'
        required: true
        default: '3'
      num2:
        description: 'Second number for addition'
        required: true
        default: '5'
      expectedResult:
        description: 'Expected result of the addition'
        required: true
        default: '8'

jobs:
  test:
    name: Run Appium Calculator Test
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up JDK
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      # 3. Set up Android tools
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      # 4. Install Appium
      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Install UiAutomator2 Driver
        run: |
          appium driver install uiautomator2

      - name: Verify Drivers Installed
        run: |
          appium driver list

      # 5. Install Android Emulator and System Image
      - name: Install Android Emulator and System Image
        run: |
          echo y | sdkmanager --sdk_root=$ANDROID_HOME "system-images;android-35;google_apis;x86_64"
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "emulator"

      # 6. Create AVD (Pixel 8 Pro API 35)
      - name: Create Pixel 8 Pro AVD
        run: |
          echo "no" | avdmanager create avd -n Android35 -k "system-images;android-35;google_apis;x86_64"


      # 7. Start Emulator
      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd Android35 -no-window -no-boot-anim -gpu off &

      # 8. Install required dependencies
      - name: Install Dependencies
        run: |
          mvn clean install

      # 9. Run the test with manual inputs
      - name: Run Appium Test
        run: |
          mvn test -Dnum1=${{ github.event.inputs.num1 }} -Dnum2=${{ github.event.inputs.num2 }} -DexpectedResult=${{ github.event.inputs.expectedResult }}
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}

      # 10. Upload test results as artifact
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: target/surefire-reports/  # Path for Maven test reports
